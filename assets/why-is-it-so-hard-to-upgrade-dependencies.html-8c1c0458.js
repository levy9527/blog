import{_ as r}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as t,c as n,e as d,d as c,a as e,b as a,f as s}from"./app-22de02ae.js";const h={},l=e("h1",{id:"升个jar版本-怎么这么难",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#升个jar版本-怎么这么难","aria-hidden":"true"},"#"),a(" 升个jar版本，怎么这么难？")],-1),p=e("h2",{id:"前言",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#前言","aria-hidden":"true"},"#"),a(" 前言")],-1),f=e("p",null,"无论是 C/S 还是 B/S 模式下的应用通过是 API 来交互的。而 API 的消费者与提供者，可以看成一枚硬币的正反面。",-1),_=e("p",null,"通常来说，对 Web 应用而言，前端是消费者，后端是提供者。",-1),m=e("p",null,"今天就站在服务提供方的视角来看下，升级依赖版本，遇到的难点有哪些？",-1),u=s('<h2 id="接口调用示意图" tabindex="-1"><a class="header-anchor" href="#接口调用示意图" aria-hidden="true">#</a> 接口调用示意图</h2><figure><img src="https://raw.githubusercontent.com/levy9527/image-holder/main/md-image-kit/1693060849195-8f65efab-8c15-4731-bf8e-10645785f0f5.jpeg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="已知信息" tabindex="-1"><a class="header-anchor" href="#已知信息" aria-hidden="true">#</a> 已知信息</h2><ol><li>common.jar 的版本是 1.0.0-SNAPSHOT，实际上 common.jar 的最新稳定版已经是 5.x 了。比较了下版本内容，发现二者是不兼容的。</li><li>公司有多个业务系统依赖 infra-service，但它们隶属于别的团队</li></ol><h2 id="问题" tabindex="-1"><a class="header-anchor" href="#问题" aria-hidden="true">#</a> 问题</h2><p>infra-service 的某个接口，现在要修改，多返回一个字段，但因为之前的代码健壮性不够，新接口　common.jar 处理会报错。</p><p>于是，想通过让使用方升级 jar 来解决，此方案可行吗？</p><p>答案可能出乎意料：不行！</p><p>因为：jar 升级版本的动作不在自己的掌控范围内。</p><p>说起来很简单：叫他们升一下就行。<br> 但问题是：</p><ol><li>他们是谁？</li><li>你说升就升？</li></ol><p>问题本身在技术层面很简单，但在现实的执行层面，有着超出技术范畴的难点。这便是服务提供者，需要面对的。而这是作为服务的消费者，容易忽视的一点。</p><h2 id="复盘" tabindex="-1"><a class="header-anchor" href="#复盘" aria-hidden="true">#</a> 复盘</h2><p>那么，在技术层面，是否能做得更好，避免重蹈覆辙呢？其实是可以的。</p><p>有两种思路：</p><ol><li>只对外发布稳定版，要么强制自己的接口一直向后兼容；要么一旦有接口不兼容，在保留旧接口的情况下，发布新接口、新 jar。</li><li>利用好 SNAPSHOT 版本 jar 会不断覆盖的特性，同时对外发布 1.0.0-SNAPSHOT 版本，以及每次迭代的稳定版。也即，通过使得 1.0.0-SNAPSHOT 永远与最新的稳定版本相同，让使用者及时升级。</li></ol>',16);function b(g,x){const i=o("BiliBili");return t(),n("div",null,[l,p,f,_,m,d(" more "),u,c(i,{bvid:"BV18G411d7gR"})])}const B=r(h,[["render",b],["__file","why-is-it-so-hard-to-upgrade-dependencies.html.vue"]]);export{B as default};
