const e=JSON.parse(`{"key":"v-57d9b582","path":"/java/recommend-practices-for-writing-good-functions.html","title":"编写函数的最佳实践","lang":"zh-CN","frontmatter":{"date":"2022-10-14T00:00:00.000Z","tag":["Java","Daily"],"description":"编写函数的最佳实践 前言 编写函数的目的，最根本的目的是提高可维护性，从而提高研发效率。 本文将推荐一些编写函数的最佳实践，以供参数。 减少重复 这是在遵守 Don't repeat yourself (DRY) 原则。 实践中可以采取一个简单的判断方法：当相同的代码段第二次出现时，就是需要把代码封装成函数的契机。","head":[["meta",{"property":"og:url","content":"https://levy.vip/java/recommend-practices-for-writing-good-functions.html"}],["meta",{"property":"og:site_name","content":"levy"}],["meta",{"property":"og:title","content":"编写函数的最佳实践"}],["meta",{"property":"og:description","content":"编写函数的最佳实践 前言 编写函数的目的，最根本的目的是提高可维护性，从而提高研发效率。 本文将推荐一些编写函数的最佳实践，以供参数。 减少重复 这是在遵守 Don't repeat yourself (DRY) 原则。 实践中可以采取一个简单的判断方法：当相同的代码段第二次出现时，就是需要把代码封装成函数的契机。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-29T01:18:35.000Z"}],["meta",{"property":"article:author","content":"levy"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"Daily"}],["meta",{"property":"article:published_time","content":"2022-10-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-29T01:18:35.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"编写函数的最佳实践\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-10-14T00:00:00.000Z\\",\\"dateModified\\":\\"2023-11-29T01:18:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"levy\\"}]}"]]},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[{"level":3,"title":"减少重复","slug":"减少重复","link":"#减少重复","children":[]},{"level":3,"title":"隐藏细节","slug":"隐藏细节","link":"#隐藏细节","children":[]}]},{"level":2,"title":"建议","slug":"建议","link":"#建议","children":[{"level":3,"title":"优先根据业务命名","slug":"优先根据业务命名","link":"#优先根据业务命名","children":[]},{"level":3,"title":"一个函数只做一件事","slug":"一个函数只做一件事","link":"#一个函数只做一件事","children":[]},{"level":3,"title":"优先使用纯函数","slug":"优先使用纯函数","link":"#优先使用纯函数","children":[]},{"level":3,"title":"编写不需要返回值的函数","slug":"编写不需要返回值的函数","link":"#编写不需要返回值的函数","children":[]}]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1701220715000,"updatedTime":1701220715000,"contributors":[{"name":"levy","email":"chenriwei@deepexi.com","commits":1}]},"readingTime":{"minutes":5.88,"words":1764},"filePathRelative":"java/recommend-practices-for-writing-good-functions.md","localizedDate":"2022年10月14日","excerpt":"<h1> 编写函数的最佳实践</h1>\\n<h2> 前言</h2>\\n<p>编写函数的目的，最根本的目的是提高可维护性，从而提高研发效率。</p>\\n<p>本文将推荐一些编写函数的最佳实践，以供参数。</p>\\n<h3> 减少重复</h3>\\n<p>这是在遵守 <a href=\\"https://en.wikipedia.org/wiki/Don%27t_repeat_yourself\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Don't repeat yourself</a> (DRY) 原则。</p>\\n<p>实践中可以采取一个简单的判断方法：当相同的代码段第二次出现时，就是需要把代码封装成函数的契机。</p>","autoDesc":true}`);export{e as data};
