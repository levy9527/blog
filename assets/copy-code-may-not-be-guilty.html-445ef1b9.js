import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as t,c as i,e as r,f as e}from"./app-936986be.js";const o={},d=e('<h1 id="复制代码也许不是罪" tabindex="-1"><a class="header-anchor" href="#复制代码也许不是罪" aria-hidden="true">#</a> 复制代码也许不是罪</h1><h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h2><p>熟悉我的人都知道，我对代码是有追求的。</p><p>正式参加工作后，我就知道，复制粘贴是坏的实践，自己一直极力避免做这样的事。要是遇到了别人复制粘贴，要么喷，要么自己改。</p><p>我早期认为：复制代码就是菜。</p><p>后来认为：复制代码可能不是菜，而是懒，没有素养，自我要求。</p><p>而现在：代码其实也没那么重要；某些情况下复制粘贴是可以接受的。</p><p>编码经过七个年头，我思想上为何会有如此改变？难道这就是传说中的七年之痒?</p>',8),m=e('<h2 id="正文" tabindex="-1"><a class="header-anchor" href="#正文" aria-hidden="true">#</a> 正文</h2><p>我总结了一下，主要有以下原因：<br> 1.深刻地理解了源码与测试用例之间的关系。只相信测试用例，而不是相信源码。如果你只改源码而不是补充相应的测试代码，那所谓的有追求是盲目、片面的。<br><img src="https://raw.githubusercontent.com/levy9527/image-holder/main/md-image-kit/1695539128677-28080825-d512-41fe-85e4-6a56553d25f1.jpeg" alt="" loading="lazy"></p><p>2.对具体的编码实现已经缺乏兴致了。尤其是有AI的情况下，真的是有手就会，何必要我来写呢？我负责设计，再进行 Code Review　不是更好吗？<br><img src="https://raw.githubusercontent.com/levy9527/image-holder/main/md-image-kit/2023-09-24-IMG_2577.jpg" alt="" loading="lazy"><br><img src="https://raw.githubusercontent.com/levy9527/image-holder/main/md-image-kit/2023-09-24-IMG_2578.jpg" alt="" loading="lazy"><br><img src="https://raw.githubusercontent.com/levy9527/image-holder/main/md-image-kit/2023-09-24-IMG_2579.jpg" alt="" loading="lazy"></p><p>3.要考虑时间成本。如果别人已经做了一大半，我何必重头开始？</p><p>4.提升对质量的认知。聚集于产出质量，而不仅仅是代码质量，那么你就会发现，要做的事还挺多，再考虑时间成本，需要做一个权衡取舍。<br><img src="https://raw.githubusercontent.com/levy9527/image-holder/main/md-image-kit/1695539182620-f3e4d2e3-bd24-4211-bb61-f5104b0e7ef3.jpeg" alt="" loading="lazy"><br><img src="https://raw.githubusercontent.com/levy9527/image-holder/main/md-image-kit/1695539182844-04210738-e753-43c8-8917-a1c98e8f4d77.jpeg" alt="" loading="lazy"></p>',5);function n(c,l){return t(),i("div",null,[d,r(" more "),m])}const s=a(o,[["render",n],["__file","copy-code-may-not-be-guilty.html.vue"]]);export{s as default};
