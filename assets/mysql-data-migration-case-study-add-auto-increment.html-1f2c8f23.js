import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o,c as l,e as c,a as n,b as s,d as i,w as r,f as a}from"./app-7577a679.js";const d={},u=a('<h1 id="数据迁移案例-表auto-increment加10w" tabindex="-1"><a class="header-anchor" href="#数据迁移案例-表auto-increment加10w" aria-hidden="true">#</a> 数据迁移案例：表AUTO_INCREMENT加10w</h1><h2 id="背景" tabindex="-1"><a class="header-anchor" href="#背景" aria-hidden="true">#</a> 背景</h2><p>项目要做数据迁移，要把 mysql-a 的数据，迁移至 mysql-b，同时 mysql-b 的数据不能丢失。</p><p>问题分析：</p><ol><li>两个 mysql 实例的表的主键都是自增的，若直接合并，必然造成主键冲突。</li><li>可以修改某一方的主键后再迁移，但要注意后续不会因主键增长而发生冲突。</li></ol><p>迁移思路:</p><ol><li>由于 mysql-b 的数据更重要、且数据量更大，故决定修改 mysql-a 的数据的主键，方案是增加 10w（mysql-b 的单表数据不超过 10w条）</li><li>mysql-b 的相应的表 AUTO_INCREMENT 加 10w</li><li>记得动手前先确保数据已备份</li></ol><p>注意：mysql-b的数据量比mysql-a的大，所以 mysql-b也直接设置AUTO_INCREMENT 加10w。<br> 但如果mysql-a的数量比较大，那是不可行的，此时mysql-b 需要先select 出每张表的最大id，作为需要增加的AUTO_INCREMENT。</p>',8),k=n("h2",{id:"备份",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#备份","aria-hidden":"true"},"#"),s(" 备份")],-1),m=a(`<h2 id="sql编写" tabindex="-1"><a class="header-anchor" href="#sql编写" aria-hidden="true">#</a> SQL编写</h2><p>mysql-a 可以先 insert：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">insert</span> <span class="token keyword">into</span> table_a<span class="token punctuation">(</span>id<span class="token punctuation">,</span> other_fields<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span>
<span class="token keyword">select</span> id<span class="token operator">+</span><span class="token number">100000</span><span class="token punctuation">,</span> other_fields<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">from</span> table_a
<span class="token keyword">where</span> is_deleted<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>再导出新增的数据：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> 
<span class="token keyword">from</span> table_a 
<span class="token keyword">where</span> id <span class="token operator">&gt;</span> <span class="token number">100000</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>也可以先备份 mysql-a，然后直接 update：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">update</span> table_a
<span class="token keyword">set</span> id <span class="token operator">=</span> id <span class="token operator">+</span> <span class="token number">100000</span>
<span class="token keyword">where</span> is_deleted<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>再导出。</p><p>对于 mysql-b，需要编写的SQL很简单：</p><ol><li>先把当前表的主键自增值找出来</li><li>再加 10w</li></ol><p>理想中SQL如下：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> table_a <span class="token keyword">AUTO_INCREMENT</span> <span class="token operator">=</span> <span class="token punctuation">(</span>
  <span class="token keyword">SELECT</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token operator">+</span> <span class="token number">100000</span>
  <span class="token keyword">FROM</span> information_schema<span class="token punctuation">.</span><span class="token keyword">TABLES</span>
  <span class="token keyword">WHERE</span> TABLE_NAME <span class="token operator">=</span> <span class="token string">&#39;table_a&#39;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然而，报错如下：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>You have an error <span class="token operator">in</span> your <span class="token keyword">SQL</span> syntax<span class="token punctuation">;</span> <span class="token keyword">check</span> the manual that corresponds <span class="token keyword">to</span> your MySQL server version <span class="token keyword">for</span> the <span class="token keyword">right</span> syntax <span class="token keyword">to</span> <span class="token keyword">use</span> near <span class="token string">&#39;(
  SELECT AUTO_INCREMENT + 100000
  FROM information_schema.TABLES
  WHERE TABLE_&#39;</span> at line <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>原因是： The <strong>AUTO_INCREMENT</strong> value must be a constant or a specific integer value in the <strong>ALTER TABLE</strong> statement.</p><p>那怎么办呢？存储过程就派上用场了。思路是使用存储过程来拼接 alter table 语句，绕过 MySQL 的限制。</p><h2 id="存储过程-可复用" tabindex="-1"><a class="header-anchor" href="#存储过程-可复用" aria-hidden="true">#</a> 存储过程（可复用</h2><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DELIMITER</span> <span class="token comment">//</span>
<span class="token keyword">CREATE</span> <span class="token keyword">PROCEDURE</span> AddAutoIncrementValue<span class="token punctuation">(</span>tableName <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span> incrementValue <span class="token keyword">bigint</span> <span class="token keyword">unsigned</span><span class="token punctuation">)</span>
<span class="token keyword">BEGIN</span>
  <span class="token keyword">DECLARE</span> currentAutoIncrement <span class="token keyword">bigint</span> <span class="token keyword">unsigned</span><span class="token punctuation">;</span>
  <span class="token keyword">SET</span> currentAutoIncrement <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">FROM</span> information_schema<span class="token punctuation">.</span><span class="token keyword">TABLES</span> <span class="token keyword">WHERE</span> TABLE_NAME <span class="token operator">=</span> tableName<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">SET</span> <span class="token variable">@sql</span> <span class="token operator">=</span> CONCAT<span class="token punctuation">(</span><span class="token string">&#39;ALTER TABLE &#39;</span><span class="token punctuation">,</span> tableName<span class="token punctuation">,</span> <span class="token string">&#39; AUTO_INCREMENT = &#39;</span><span class="token punctuation">,</span> currentAutoIncrement <span class="token operator">+</span> incrementValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">PREPARE</span> stmt <span class="token keyword">FROM</span> <span class="token variable">@sql</span><span class="token punctuation">;</span>
  <span class="token keyword">EXECUTE</span> stmt<span class="token punctuation">;</span>
  <span class="token keyword">DEALLOCATE</span> <span class="token keyword">PREPARE</span> stmt<span class="token punctuation">;</span>
<span class="token keyword">END</span><span class="token comment">//</span>
<span class="token keyword">DELIMITER</span> <span class="token punctuation">;</span>�
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CALL</span> AddAutoIncrementValue<span class="token punctuation">(</span><span class="token string">&#39;table_a&#39;</span><span class="token punctuation">,</span> <span class="token number">100000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">CALL</span> AddAutoIncrementValue<span class="token punctuation">(</span><span class="token string">&#39;tablb_b&#39;</span><span class="token punctuation">,</span> <span class="token number">100000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>上述代码可复用，直接复制粘贴即可，有需要的请自取。</p>`,20);function v(b,y){const e=p("RouterLink");return o(),l("div",null,[u,c(" more "),k,n("p",null,[s("迁移前一定要做好备份。备份的技巧在"),i(e,{to:"/mysql/mysql-backup-case-study-mysqldump-in-action.html"},{default:r(()=>[s("另一篇文章")]),_:1}),s("里有讲，就不在此赘述了。")]),m])}const h=t(d,[["render",v],["__file","mysql-data-migration-case-study-add-auto-increment.html.vue"]]);export{h as default};
