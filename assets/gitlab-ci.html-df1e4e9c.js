import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as p,c,a as n,b as a,d as e,f as t}from"./app-39ac1237.js";const o={},r=t(`<h1 id="gitlab-ci" tabindex="-1"><a class="header-anchor" href="#gitlab-ci" aria-hidden="true">#</a> Gitlab CI</h1><h2 id="合并代码前进行检查" tabindex="-1"><a class="header-anchor" href="#合并代码前进行检查" aria-hidden="true">#</a> 合并代码前进行检查</h2><h3 id="背景" tabindex="-1"><a class="header-anchor" href="#背景" aria-hidden="true">#</a> 背景</h3><p>有的产品线使用 Jenkins 进行 CI，但又没设置好相应的 GitLab 插件，于是会形成这样一个流程：</p><ul><li>feature 分支发起 Merge Request</li><li>合并至受保护的分支</li><li>登录 Jenkins，点击构建</li><li>构建失败，原因：编译报错</li></ul><p>最后一点，非常难以忍受，因为代码已经合并进去了，木已成舟。此时面对编译报错，第一反应是解决报错，重新编译。但有没有一种可能，我根本不想要这些编译报错的代码呢？</p><p>笔者还是更倾向于防患于未然的思维模式，也即不能通过编译的代码，不允许合并至受保护的分支。而使用 Gitlab CI 来做这件事比 Jenkins 体验更丝滑，下面就来介绍一下具体的做法。</p><h3 id="安装gitlab-runner" tabindex="-1"><a class="header-anchor" href="#安装gitlab-runner" aria-hidden="true">#</a> 安装Gitlab Runner</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">--name</span> gitlab-runner <span class="token parameter variable">--restart</span> always <span class="token punctuation">\\</span>
  <span class="token parameter variable">-v</span> /var/run/docker.sock:/var/run/docker.sock <span class="token punctuation">\\</span>
  <span class="token parameter variable">-v</span> /srv/gitlab-runner/config:/etc/gitlab-runner <span class="token punctuation">\\</span>
  gitlab/gitlab-runner:latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),u={href:"https://docs.gitlab.com/runner/install/docker.html#install-the-docker-image-and-start-the-container",target:"_blank",rel:"noopener noreferrer"},d=n("h3",{id:"注册gitlab-runner",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#注册gitlab-runner","aria-hidden":"true"},"#"),a(" 注册Gitlab Runner")],-1),g={href:"https://docs.gitlab.com/ee/ci/runners/runners_scope.html",target:"_blank",rel:"noopener noreferrer"},m=n("br",null,null,-1),k=n("img",{src:"https://raw.gitmirror.com/levy9527/image-holder/main/docs/git/1682387098778.png",alt:"image.png",loading:"lazy"},null,-1),v=n("br",null,null,-1),b=t(`<p>进入项目如下界面：<br><img src="https://raw.gitmirror.com/levy9527/image-holder/main/docs/git/1682387102770.png" alt="image.png" loading="lazy"></p><p>拿到 URL 及 token：<br><img src="https://raw.gitmirror.com/levy9527/image-holder/main/docs/git/1682387107092.png" alt="image.png" loading="lazy"></p><p>执行命令进行注册:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">--rm</span> <span class="token parameter variable">-it</span> <span class="token parameter variable">-v</span> /srv/gitlab-runner/config:/etc/gitlab-runner gitlab/gitlab-runner register
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>根据提示输入内容，其中 URL 及 token 就是前面步骤中 Web 界面获取的信息。</p><p>命令行操作示例如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Enter the GitLab instance URL <span class="token punctuation">(</span>for example, https://gitlab.com/<span class="token punctuation">)</span>:
https://your-gitlab

Enter the registration token:
your-token

Enter a description <span class="token keyword">for</span> the runner:
<span class="token function">java</span>

Enter tags <span class="token keyword">for</span> the runner <span class="token punctuation">(</span>comma-separated<span class="token punctuation">)</span>:
<span class="token function">java</span>


Enter an executor: custom, shell, virtualbox, kubernetes, docker, docker-ssh, parallels, ssh, docker+machine, docker-ssh+machine:
<span class="token function">docker</span>

Enter the default Docker image <span class="token punctuation">(</span>for example, ruby:2.6<span class="token punctuation">)</span>:
maven:3.6.3-openjdk-8
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注册成功后，显示示例如下：<br><img src="https://raw.gitmirror.com/levy9527/image-holder/main/docs/git/1682387118062.png" alt="image.png" loading="lazy"></p><h3 id="设置mr检查" tabindex="-1"><a class="header-anchor" href="#设置mr检查" aria-hidden="true">#</a> 设置MR检查</h3><p>进入项目如下界面：<br><img src="https://raw.gitmirror.com/levy9527/image-holder/main/docs/git/1682387122013.png" alt="image.png" loading="lazy"></p><p>勾选流水线必须成功。<br><img src="https://raw.gitmirror.com/levy9527/image-holder/main/docs/git/1682388470210.png" alt="image.png" loading="lazy"></p><h3 id="配置-gitlab-ci-yml" tabindex="-1"><a class="header-anchor" href="#配置-gitlab-ci-yml" aria-hidden="true">#</a> 配置.gitlab-ci.yml</h3><p>简单示例如下，根据实际情况修改：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">image</span><span class="token punctuation">:</span> maven<span class="token punctuation">:</span>3.6.3<span class="token punctuation">-</span>openjdk<span class="token punctuation">-</span><span class="token number">8</span>

<span class="token key atrule">variables</span><span class="token punctuation">:</span>
  <span class="token key atrule">MAVEN_CLI_OPTS</span><span class="token punctuation">:</span> <span class="token string">&quot;-s .m2/settings.xml --batch-mode&quot;</span>
  <span class="token key atrule">MAVEN_OPTS</span><span class="token punctuation">:</span> <span class="token string">&quot;-Dmaven.repo.local=.m2/repository&quot;</span>

<span class="token key atrule">cache</span><span class="token punctuation">:</span>
  <span class="token key atrule">paths</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> .m2/repository

<span class="token key atrule">stages</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> build

<span class="token key atrule">build</span><span class="token punctuation">:</span>
  <span class="token key atrule">stage</span><span class="token punctuation">:</span> build
  <span class="token key atrule">script</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> mvn $MAVEN_CLI_OPTS clean compile
  <span class="token key atrule">tags</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> java <span class="token comment"># 这是注册了的 gitlab runner 的 tag</span>
  <span class="token key atrule">rules</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">if</span><span class="token punctuation">:</span> $CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /develop<span class="token punctuation">|</span>test<span class="token punctuation">|</span>uat/

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上述示例要设置成功，还要确保 .m2/settings.xml 文件存在。</p><p>建议提前 yml 文件前，在 Gitlab 先进行语法校验。<br><img src="https://raw.gitmirror.com/levy9527/image-holder/main/docs/git/1682388474604.png" alt="image.png" loading="lazy"></p><p>如果错误，会有提示。<br><img src="https://raw.gitmirror.com/levy9527/image-holder/main/docs/git/1682388478169.png" alt="image.png" loading="lazy"></p><h3 id="效果" tabindex="-1"><a class="header-anchor" href="#效果" aria-hidden="true">#</a> 效果</h3><p>当流水线还未结束时，不能提前合并代码，只能等待流水线成功。<br><img src="https://raw.gitmirror.com/levy9527/image-holder/main/docs/git/1682388481821.png" alt="image.png" loading="lazy"></p><p>如果流水线失败了，不能合并。<br><img src="https://raw.gitmirror.com/levy9527/image-holder/main/docs/git/1682388485568.png" alt="image.png" loading="lazy"></p><h2 id="线上发布-jar" tabindex="-1"><a class="header-anchor" href="#线上发布-jar" aria-hidden="true">#</a> 线上发布 jar</h2><p>可以在前文的基础上，设置流水线自动发布 jar。</p><h3 id="maven配置" tabindex="-1"><a class="header-anchor" href="#maven配置" aria-hidden="true">#</a> Maven配置</h3><p>考虑到一个项目A，可能划分了多个模块，并非每个模块都需要发布 jar，可以修改对应模块的 pom.xml</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!--  跳过 deploy 步骤   --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>maven-deploy-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>skip</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>skip</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>则在项目根目录执行 deploy 命令即可：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mvn deploy <span class="token parameter variable">-Dmaven.test.skip</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="gitlab配置" tabindex="-1"><a class="header-anchor" href="#gitlab配置" aria-hidden="true">#</a> Gitlab配置</h3><p>相应 gitlab-ci 配置如下：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">deploy</span><span class="token punctuation">:</span>
  <span class="token key atrule">stage</span><span class="token punctuation">:</span> deploy
  <span class="token key atrule">script</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> mvn $MAVEN_CLI_OPTS <span class="token punctuation">-</span>Dmaven.test.skip deploy
  <span class="token key atrule">tags</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> java
  <span class="token key atrule">rules</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">if</span><span class="token punctuation">:</span> $CI_COMMIT_BRANCH =~ /develop<span class="token punctuation">|</span>test<span class="token punctuation">|</span>uat/

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>代码合并或有新的 commit 时，会执行流水线：<br><img src="https://raw.gitmirror.com/levy9527/image-holder/main/docs/git/1682388489368.png" alt="image.png" loading="lazy"></p><h3 id="拉取最新的jar" tabindex="-1"><a class="header-anchor" href="#拉取最新的jar" aria-hidden="true">#</a> 拉取最新的jar</h3><p>在B项目中，如果要引用A项目打出来的 jar，记得拉取最新的版本，pom.xml 设置如下：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repositories</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repository</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>nexus<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>nexus-snapshot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">&gt;</span></span>http://localhost:8081/repository/maven-snapshots/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>snapshots</span><span class="token punctuation">&gt;</span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">&gt;</span></span>
            <span class="token comment">&lt;!--     拉取最新的   --&gt;</span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>updatePolicy</span><span class="token punctuation">&gt;</span></span>always<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>updatePolicy</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>snapshots</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repository</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repositories</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="常见问题与解决方案" tabindex="-1"><a class="header-anchor" href="#常见问题与解决方案" aria-hidden="true">#</a> 常见问题与解决方案</h2><h3 id="创建不了容器" tabindex="-1"><a class="header-anchor" href="#创建不了容器" aria-hidden="true">#</a> 创建不了容器</h3><blockquote><p>ERROR: Preparation failed: adding cache volume: set volume permissions: running permission container &quot;d1574748b77fc73a4319a45341af1f0eab983900d81885a02c017ff6c5559f28&quot; for volume &quot;runner-bzsttzs-project-2271-concurrent-0-cache-3c3f060a0374fc8bc39395164f415a70&quot;: starting permission container: Error response from daemon: OCI runtime create failed: container_linux.go:349: starting container process caused &quot;process_linux.go:319: getting the final child&#39;s pid from pipe caused &quot;EOF&quot;&quot;: unknown (linux_set.go:105:0s)</p></blockquote><p>可以尝试的方案：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> restart gitlab-runner
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果上述方法不行，可尝试重启 docker</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl stop <span class="token function">docker</span>
<span class="token function">sudo</span> systemctl start <span class="token function">docker</span>
<span class="token function">sudo</span> systemctl status <span class="token function">docker</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="本地成功-流水线失败" tabindex="-1"><a class="header-anchor" href="#本地成功-流水线失败" aria-hidden="true">#</a> 本地成功，流水线失败</h3><p>如果流水线编译报错，本地编译通过，不用怀疑，一定是本地的问题。</p><p>本地之所以能编译通过，是因为有缓存。如果 pom.xml 没有设置 <code>&lt;updatePolicy&gt;always&lt;/updatePolicy&gt;</code>，编译时很可能使用的是缓存。</p><p>清除缓存拉取最新的包即可。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>mvn <span class="token operator">-</span>U clean install
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="参考文档" tabindex="-1"><a class="header-anchor" href="#参考文档" aria-hidden="true">#</a> 参考文档</h2>`,47),h={href:"https://docs.gitlab.com/ee/ci/examples/",target:"_blank",rel:"noopener noreferrer"},y={href:"https://docs.gitlab.com/ee/ci/variables/predefined_variables.html",target:"_blank",rel:"noopener noreferrer"},f={href:"https://docs.gitlab.com/ee/ci/jobs/job_control.html#specify-when-jobs-run-with-rules",target:"_blank",rel:"noopener noreferrer"};function _(x,E){const s=l("ExternalLinkIcon");return p(),c("div",null,[r,n("p",null,[a("其他安装方式可查阅"),n("a",u,[a("文档"),e(s)]),a("。")]),d,n("p",null,[a("Gitlab Runner 根据范围分为"),n("a",g,[a("三种"),e(s)]),a("。注册需要获取相应的 token，这就涉及到了权限，至少需要 Maintainer 权限。"),m,k,v,a(" 下面以 Specific Runner 为例进行说明。")]),b,n("ul",null,[n("li",null,[n("a",h,[a("Gitlab CI 示例 "),e(s)])]),n("li",null,[n("a",y,[a("预设的环境变量"),e(s)])]),n("li",null,[n("a",f,[a("rules规则说明"),e(s)])])])])}const I=i(o,[["render",_],["__file","gitlab-ci.html.vue"]]);export{I as default};
