import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as c,c as i,a as n,b as s,d as a,w as l,e as u,f as r}from"./app-3a1a3291.js";const k={},d={id:"mr-py",tabindex:"-1"},v=n("a",{class:"header-anchor",href:"#mr-py","aria-hidden":"true"},"#",-1),m={href:"http://mr.py",target:"_blank",rel:"noopener noreferrer"},b={id:"源文件-main-py",tabindex:"-1"},g=n("a",{class:"header-anchor",href:"#源文件-main-py","aria-hidden":"true"},"#",-1),_={href:"http://main.py",target:"_blank",rel:"noopener noreferrer"},f=r(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> re
<span class="token keyword">import</span> sys
<span class="token keyword">import</span> os
<span class="token keyword">import</span> requests
<span class="token keyword">import</span> json
<span class="token keyword">import</span> subprocess
<span class="token keyword">from</span> PyInquirer <span class="token keyword">import</span> prompt

<span class="token keyword">def</span> <span class="token function">check_config</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">if</span> <span class="token keyword">not</span> config<span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token string">&quot;\\nthe config file is empty&quot;</span>
  <span class="token keyword">if</span> <span class="token keyword">not</span> config<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;gitlab_url&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token string">&quot;\\nthe config is missing: gitlab_url &quot;</span>
  <span class="token keyword">if</span> <span class="token keyword">not</span> config<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;gitlab_token&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f&quot;\\nthe config is missing: gitlab_token\\nyou can get your token at this page: </span><span class="token interpolation"><span class="token punctuation">{</span>config<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;gitlab_url&#39;</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">/-/profile/personal_access_tokens&quot;</span></span>
  <span class="token comment">#if not config.get(&#39;gitlab_group&#39;):</span>
    <span class="token comment">#return &quot;\\nthe config is missing: gitlab_group &quot;</span>
  <span class="token keyword">if</span> <span class="token keyword">not</span> config<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;codebases&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token string">&quot;\\nthe config is missing: codebases&quot;</span>
  <span class="token keyword">return</span> <span class="token number">0</span>

<span class="token keyword">def</span> <span class="token function">load_config</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  path <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>expanduser<span class="token punctuation">(</span><span class="token string">&quot;~&quot;</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">/.mr-config.json&#39;</span></span>
  <span class="token keyword">try</span><span class="token punctuation">:</span>
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
      config <span class="token operator">=</span> json<span class="token punctuation">.</span>load<span class="token punctuation">(</span>f<span class="token punctuation">)</span>
      check_result <span class="token operator">=</span> check_config<span class="token punctuation">(</span>config<span class="token punctuation">)</span>
      <span class="token keyword">if</span> check_result <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>with_red_color<span class="token punctuation">(</span>check_result<span class="token punctuation">)</span><span class="token punctuation">)</span>
        sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
      <span class="token keyword">return</span> config
  <span class="token keyword">except</span> FileNotFoundError<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>with_red_color<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;config file was not found: </span><span class="token interpolation"><span class="token punctuation">{</span>path<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">get_mr_url</span><span class="token punctuation">(</span>api_prefix<span class="token punctuation">,</span> project_id<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>api_prefix<span class="token punctuation">}</span></span><span class="token string">/projects/</span><span class="token interpolation"><span class="token punctuation">{</span>project_id<span class="token punctuation">}</span></span><span class="token string">/merge_requests&#39;</span></span>

<span class="token keyword">def</span> <span class="token function">get_params</span><span class="token punctuation">(</span>project_name<span class="token punctuation">)</span><span class="token punctuation">:</span>
  params <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;search&#39;</span><span class="token punctuation">:</span> project_name<span class="token punctuation">}</span>
  <span class="token keyword">return</span> params

<span class="token keyword">def</span> <span class="token function">get_project_id_by_name</span><span class="token punctuation">(</span>api_prefix<span class="token punctuation">,</span> headers<span class="token punctuation">,</span> params<span class="token punctuation">,</span> project_name<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Getting project_id...\\n&#39;</span><span class="token punctuation">)</span>
  url <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>api_prefix<span class="token punctuation">}</span></span><span class="token string">/projects&#39;</span></span>
  response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> params<span class="token operator">=</span>get_params<span class="token punctuation">(</span>project_name<span class="token punctuation">)</span><span class="token punctuation">)</span>
  projects <span class="token operator">=</span> response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>
  match_projects <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

  <span class="token keyword">if</span> response<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>
    <span class="token keyword">for</span> project <span class="token keyword">in</span> projects<span class="token punctuation">:</span>
      <span class="token keyword">if</span> project_name <span class="token operator">==</span> project<span class="token punctuation">[</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
        match_projects<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">:</span> project<span class="token punctuation">[</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;http_url_to_repo&#39;</span><span class="token punctuation">:</span> project<span class="token punctuation">[</span><span class="token string">&#39;http_url_to_repo&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> match_projects<span class="token punctuation">:</span>
      <span class="token keyword">print</span><span class="token punctuation">(</span>with_red_color<span class="token punctuation">(</span><span class="token string">&#39;No project match! please check your settings or authorization\\n&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Searched projects:\\n&#39;</span><span class="token punctuation">)</span>
      <span class="token keyword">for</span> project <span class="token keyword">in</span> projects<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>project<span class="token punctuation">[</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
      sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>

    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>match_projects<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>
      project_id <span class="token operator">=</span> match_projects<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">]</span>
      <span class="token keyword">return</span> project_id

    <span class="token comment"># multiple matches</span>
    questions <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
      <span class="token string">&#39;type&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;list&#39;</span><span class="token punctuation">,</span>
      <span class="token string">&#39;message&#39;</span><span class="token punctuation">:</span> <span class="token string-interpolation"><span class="token string">f&quot;Choose project&quot;</span></span><span class="token punctuation">,</span>
      <span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;project&#39;</span><span class="token punctuation">,</span>
      <span class="token string">&#39;choices&#39;</span><span class="token punctuation">:</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> x<span class="token punctuation">[</span><span class="token string">&#39;http_url_to_repo&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span> match_projects<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">]</span>
    answers <span class="token operator">=</span> prompt<span class="token punctuation">(</span>questions<span class="token punctuation">)</span>
    repo_url <span class="token operator">=</span> answers<span class="token punctuation">[</span><span class="token string">&#39;project&#39;</span><span class="token punctuation">]</span>

    <span class="token keyword">for</span> project <span class="token keyword">in</span> match_projects<span class="token punctuation">:</span>
      <span class="token keyword">if</span> project<span class="token punctuation">[</span><span class="token string">&#39;http_url_to_repo&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> repo_url<span class="token punctuation">:</span>
        <span class="token keyword">return</span> project<span class="token punctuation">[</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">]</span>

  <span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Error:&#39;</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span>status_code<span class="token punctuation">,</span> response<span class="token punctuation">.</span>text<span class="token punctuation">)</span>
    sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">is_conflict_branch</span><span class="token punctuation">(</span>branch<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token triple-quoted-string string">&quot;&quot;&quot;
  Returns True if the branch is of the form conflict/{source_branch}(to){target_branch}, False otherwise.

  Parameters:
  branch (str): The name of the branch to check.
  &quot;&quot;&quot;</span>
  prefix <span class="token operator">=</span> <span class="token string">&quot;conflict/&quot;</span>
  suffix <span class="token operator">=</span> <span class="token string">&quot;(to)&quot;</span>
  <span class="token keyword">if</span> branch<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span>prefix<span class="token punctuation">)</span> <span class="token keyword">and</span> suffix <span class="token keyword">in</span> branch<span class="token punctuation">:</span>
    source_branch<span class="token punctuation">,</span> target_branch <span class="token operator">=</span> branch<span class="token punctuation">.</span>split<span class="token punctuation">(</span>suffix<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>target_branch<span class="token punctuation">)</span><span class="token punctuation">:</span>
      <span class="token keyword">return</span> <span class="token boolean">True</span>
  <span class="token keyword">return</span> <span class="token boolean">False</span>

<span class="token keyword">def</span> <span class="token function">get_target_branch</span><span class="token punctuation">(</span>conflict_branch<span class="token punctuation">)</span><span class="token punctuation">:</span>
  suffix <span class="token operator">=</span> <span class="token string">&quot;(to)&quot;</span>
  parts <span class="token operator">=</span> conflict_branch<span class="token punctuation">.</span>split<span class="token punctuation">(</span>suffix<span class="token punctuation">)</span>
  target_branch <span class="token operator">=</span> parts<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> target_branch
<span class="token keyword">def</span> <span class="token function">create_merge_request</span><span class="token punctuation">(</span>source_branch<span class="token punctuation">,</span> target_branch<span class="token punctuation">,</span> api_prefix<span class="token punctuation">,</span> project_id<span class="token punctuation">,</span> headers<span class="token punctuation">,</span> remove_source_branch<span class="token punctuation">:</span> <span class="token builtin">bool</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;source_branch&#39;</span><span class="token punctuation">:</span> source_branch<span class="token punctuation">,</span> <span class="token string">&#39;target_branch&#39;</span><span class="token punctuation">:</span> <span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>target_branch<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">,</span>
          <span class="token string">&#39;title&#39;</span><span class="token punctuation">:</span> source_branch<span class="token punctuation">,</span> <span class="token string">&#39;description&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;created by mr.py&#39;</span><span class="token punctuation">,</span>
          <span class="token string">&#39;remove_source_branch&#39;</span><span class="token punctuation">:</span> remove_source_branch
          <span class="token punctuation">}</span>
  response <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>get_mr_url<span class="token punctuation">(</span>api_prefix<span class="token punctuation">,</span> project_id<span class="token punctuation">)</span><span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">)</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span>
  <span class="token comment">#response.raise_for_status()</span>

  res <span class="token operator">=</span> response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token string">&#39;web_url&#39;</span> <span class="token keyword">in</span> res<span class="token punctuation">:</span>
    <span class="token keyword">if</span> res<span class="token punctuation">[</span><span class="token string">&#39;changes_count&#39;</span><span class="token punctuation">]</span> <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
      <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>source_branch<span class="token punctuation">}</span></span><span class="token string"> -&gt; </span><span class="token interpolation"><span class="token punctuation">{</span>target_branch<span class="token punctuation">}</span></span><span class="token string">: will be ignored, because there is no change\\n&#39;</span></span><span class="token punctuation">)</span>
      <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Maybe you forget to push your commits or choose wrong branch\\n&#39;</span><span class="token punctuation">)</span>
      close_mr_url <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>api_prefix<span class="token punctuation">}</span></span><span class="token string">/projects/</span><span class="token interpolation"><span class="token punctuation">{</span>project_id<span class="token punctuation">}</span></span><span class="token string">/merge_requests/</span><span class="token interpolation"><span class="token punctuation">{</span>res<span class="token punctuation">[</span><span class="token string">&quot;iid&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span>
      requests<span class="token punctuation">.</span>put<span class="token punctuation">(</span>close_mr_url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> data<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;state_event&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;close&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
      <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>source_branch<span class="token punctuation">}</span></span><span class="token string"> -&gt; </span><span class="token interpolation"><span class="token punctuation">{</span>target_branch<span class="token punctuation">}</span></span><span class="token string">: </span><span class="token interpolation"><span class="token punctuation">{</span>res<span class="token punctuation">[</span><span class="token string">&#39;web_url&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
      <span class="token keyword">return</span> res<span class="token punctuation">[</span><span class="token string">&#39;web_url&#39;</span><span class="token punctuation">]</span>
  <span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
    <span class="token keyword">return</span> res<span class="token punctuation">[</span><span class="token string">&#39;message&#39;</span><span class="token punctuation">]</span>

<span class="token keyword">def</span> <span class="token function">create_merge_request_from_conflict_branch</span><span class="token punctuation">(</span>current_branch<span class="token punctuation">,</span> api_prefix<span class="token punctuation">,</span> headers<span class="token punctuation">,</span> params<span class="token punctuation">,</span> project_name<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Pushing current branch...&#39;</span><span class="token punctuation">)</span>
  subprocess<span class="token punctuation">.</span>check_output<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;git push origin </span><span class="token interpolation"><span class="token punctuation">{</span>current_branch<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">,</span> shell<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Creating merge request...\\n&#39;</span><span class="token punctuation">)</span>
  target_branch <span class="token operator">=</span> get_target_branch<span class="token punctuation">(</span>current_branch<span class="token punctuation">)</span>
  project_id <span class="token operator">=</span> get_project_id_by_name<span class="token punctuation">(</span>api_prefix<span class="token punctuation">,</span> headers<span class="token punctuation">,</span> params<span class="token punctuation">,</span> project_name<span class="token punctuation">)</span>
  <span class="token keyword">return</span> create_merge_request<span class="token punctuation">(</span>current_branch<span class="token punctuation">,</span> target_branch<span class="token punctuation">,</span> api_prefix<span class="token punctuation">,</span> project_id<span class="token punctuation">,</span> headers<span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">merge_gitlab_mr</span><span class="token punctuation">(</span>api_prefix<span class="token punctuation">,</span> headers<span class="token punctuation">,</span> params<span class="token punctuation">,</span> web_url<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># Extracting project_id and mr_ii</span>
    slices <span class="token operator">=</span> web_url<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;/-/merge_requests/&#39;</span><span class="token punctuation">)</span>
    mr_iid <span class="token operator">=</span> slices<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
    project_name <span class="token operator">=</span> slices<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>

    <span class="token keyword">if</span> <span class="token keyword">not</span> mr_iid<span class="token punctuation">:</span>
      <span class="token keyword">print</span><span class="token punctuation">(</span>with_red_color<span class="token punctuation">(</span><span class="token string">&#39;Invalid merge request URL&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>

    project_id <span class="token operator">=</span> get_project_id_by_name<span class="token punctuation">(</span>api_prefix<span class="token punctuation">,</span> headers<span class="token punctuation">,</span> params<span class="token punctuation">,</span> project_name<span class="token punctuation">)</span>
    <span class="token comment"># Check if the merge request has conflicts</span>
    mr_api_url <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>get_mr_url<span class="token punctuation">(</span>api_prefix<span class="token punctuation">,</span> project_id<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token punctuation">{</span>mr_iid<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span>
    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>mr_api_url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>
    response<span class="token punctuation">.</span>raise_for_status<span class="token punctuation">(</span><span class="token punctuation">)</span>
    mr <span class="token operator">=</span> response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>

    confirm_yes_or_exit<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;Confirm to merge </span><span class="token interpolation"><span class="token punctuation">{</span>mr<span class="token punctuation">[</span><span class="token string">&quot;source_branch&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string"> into </span><span class="token interpolation"><span class="token punctuation">{</span>mr<span class="token punctuation">[</span><span class="token string">&quot;target_branch&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string">? (Y/N)\\n&#39;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> mr<span class="token punctuation">[</span><span class="token string">&#39;has_conflicts&#39;</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>with_red_color<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;Merge request </span><span class="token interpolation"><span class="token punctuation">{</span>mr_iid<span class="token punctuation">}</span></span><span class="token string"> has conflicts and cannot be merged \\n&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        confirm_yes_or_exit<span class="token punctuation">(</span><span class="token string">&#39;Do you want to checkout a new branch to resolve conflicts? (Y/N)\\n&#39;</span><span class="token punctuation">)</span>

        <span class="token comment">#input(&#39;Make sure your git working directory is clean. type \`Enter\` to continue\\n&#39;)</span>
        sh_output <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
          subprocess<span class="token punctuation">.</span>check_output<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;git checkout --track origin/</span><span class="token interpolation"><span class="token punctuation">{</span>mr<span class="token punctuation">[</span><span class="token string">&quot;target_branch&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">,</span> shell<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> stderr<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>DEVNULL<span class="token punctuation">)</span>
        <span class="token comment"># 本地分支可能已存在</span>
        <span class="token keyword">except</span> subprocess<span class="token punctuation">.</span>CalledProcessError<span class="token punctuation">:</span>
          <span class="token keyword">try</span><span class="token punctuation">:</span>
            sh_output <span class="token operator">=</span> subprocess<span class="token punctuation">.</span>check_output<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;git checkout </span><span class="token interpolation"><span class="token punctuation">{</span>mr<span class="token punctuation">[</span><span class="token string">&quot;target_branch&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">,</span> shell<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>
          <span class="token comment"># 可能就是切换分支有问题</span>
          <span class="token keyword">except</span> subprocess<span class="token punctuation">.</span>CalledProcessError<span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span>with_red_color<span class="token punctuation">(</span>sh_output<span class="token punctuation">)</span><span class="token punctuation">)</span>
            sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>

        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Pulling from origin to branch </span><span class="token interpolation"><span class="token punctuation">{</span>mr<span class="token punctuation">[</span><span class="token string">&#39;target_branch&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string">\\n&quot;</span></span><span class="token punctuation">)</span>
        subprocess<span class="token punctuation">.</span>check_output<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;git pull origin </span><span class="token interpolation"><span class="token punctuation">{</span>mr<span class="token punctuation">[</span><span class="token string">&quot;target_branch&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">,</span> shell<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Switching to conflict resolving branch\\n&quot;</span></span><span class="token punctuation">)</span>
        conflict_branch <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&#39;conflict/</span><span class="token interpolation"><span class="token punctuation">{</span>mr<span class="token punctuation">[</span><span class="token string">&quot;source_branch&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string">(to)</span><span class="token interpolation"><span class="token punctuation">{</span>mr<span class="token punctuation">[</span><span class="token string">&quot;target_branch&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span>
        subprocess<span class="token punctuation">.</span>check_output<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;git checkout -b </span><span class="token interpolation"><span class="token punctuation">{</span>conflict_branch<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">,</span> shell<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;Now to resolve conflicts, you just need to open your IDE or source control tool to\\n\`merge </span><span class="token interpolation"><span class="token punctuation">{</span>mr<span class="token punctuation">[</span><span class="token string">&quot;source_branch&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string"> into </span><span class="token interpolation"><span class="token punctuation">{</span>conflict_branch<span class="token punctuation">}</span></span><span class="token string">\`&#39;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
      merge_api_url <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>mr_api_url<span class="token punctuation">}</span></span><span class="token string">/merge&#39;</span></span>
      response <span class="token operator">=</span> requests<span class="token punctuation">.</span>put<span class="token punctuation">(</span>merge_api_url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>

      <span class="token comment"># Check for errors</span>
      response<span class="token punctuation">.</span>raise_for_status<span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;Merge request </span><span class="token interpolation"><span class="token punctuation">{</span>mr_iid<span class="token punctuation">}</span></span><span class="token string"> merged successfully!&#39;</span></span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">confirm_yes_or_exit</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">:</span>
  is_checkout <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span>
  <span class="token keyword">if</span> is_checkout<span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">&#39;N&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;NO&#39;</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;You choose no, bye&#39;</span><span class="token punctuation">)</span>
    sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">with_red_color</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">:</span>
  CRED <span class="token operator">=</span> <span class="token string">&#39;\\033[91m&#39;</span>
  CEND <span class="token operator">=</span> <span class="token string">&#39;\\033[0m&#39;</span>
  <span class="token keyword">return</span> CRED <span class="token operator">+</span> text <span class="token operator">+</span> CEND

<span class="token keyword">def</span> <span class="token function">with_green_color</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">:</span>
  CGREEN <span class="token operator">=</span> <span class="token string">&#39;\\033[32m&#39;</span>
  CEND <span class="token operator">=</span> <span class="token string">&#39;\\033[0m&#39;</span>
  <span class="token keyword">return</span> CGREEN <span class="token operator">+</span> text <span class="token operator">+</span> CEND

<span class="token keyword">def</span> <span class="token function">get_source_branch_from_conflict_branch</span><span class="token punctuation">(</span>current_branch<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">if</span> <span class="token keyword">not</span> current_branch<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">&quot;conflict/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">raise</span> ValueError<span class="token punctuation">(</span><span class="token string">&quot;Invalid input string&quot;</span><span class="token punctuation">)</span>

  <span class="token keyword">match</span> <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r&#39;conflict/(.*)\\(to\\)&#39;</span><span class="token punctuation">,</span> current_branch<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token keyword">match</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token keyword">raise</span> ValueError<span class="token punctuation">(</span><span class="token string">&quot;Invalid input string&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
  <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">1</span> <span class="token keyword">and</span> <span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;version&#39;</span> <span class="token keyword">or</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;-v&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;version: 1.3.0\\nlatest feature: remove local conflict branch after merge&#39;</span><span class="token punctuation">)</span>
    sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>

  commands <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;create&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;list&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;merge&#39;</span><span class="token punctuation">]</span>
  <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token keyword">or</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token keyword">not</span> <span class="token keyword">in</span> commands<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Available commands:\\n&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> index<span class="token punctuation">,</span>command <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>commands<span class="token punctuation">)</span><span class="token punctuation">:</span>
      <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>index<span class="token punctuation">}</span></span><span class="token string">.</span><span class="token interpolation"><span class="token punctuation">{</span>command<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>
    sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>

  config <span class="token operator">=</span> load_config<span class="token punctuation">(</span><span class="token punctuation">)</span>
  gitlab_url <span class="token operator">=</span> config<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;gitlab_url&#39;</span><span class="token punctuation">)</span>
  private_token <span class="token operator">=</span> config<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;gitlab_token&#39;</span><span class="token punctuation">)</span>

  api_prefix <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>gitlab_url<span class="token punctuation">}</span></span><span class="token string">/api/v4&#39;</span></span>
  headers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;PRIVATE-TOKEN&#39;</span><span class="token punctuation">:</span> private_token<span class="token punctuation">}</span>
  params <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

  <span class="token comment"># command: list</span>
  <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">1</span> <span class="token keyword">and</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;list&#39;</span><span class="token punctuation">:</span>
    list_mr_url <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>api_prefix<span class="token punctuation">}</span></span><span class="token string">/merge_requests?state=opened&#39;</span></span>
    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>list_mr_url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>
    <span class="token keyword">if</span> response<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>
      mrs <span class="token operator">=</span> response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;You have </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">len</span><span class="token punctuation">(</span>mrs<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string"> unmerged merge requests: \\n&#39;</span></span><span class="token punctuation">)</span>

      <span class="token keyword">for</span> index<span class="token punctuation">,</span> mr <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>mrs<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment">#emoji = &#39;\\u274c&#39; if mr[&#39;has_conflicts&#39;] else &#39;\\u2714&#39;</span>
        emoji <span class="token operator">=</span> with_red_color<span class="token punctuation">(</span><span class="token string">&#39;[conflict]&#39;</span><span class="token punctuation">)</span> <span class="token keyword">if</span> mr<span class="token punctuation">[</span><span class="token string">&#39;has_conflicts&#39;</span><span class="token punctuation">]</span> <span class="token keyword">else</span> with_green_color<span class="token punctuation">(</span><span class="token string">&#39;[ok]&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">}</span></span><span class="token string">.</span><span class="token interpolation"><span class="token punctuation">{</span>mr<span class="token punctuation">[</span><span class="token string">&#39;source_branch&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string"> -&gt; </span><span class="token interpolation"><span class="token punctuation">{</span>mr<span class="token punctuation">[</span><span class="token string">&#39;target_branch&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string">: </span><span class="token interpolation"><span class="token punctuation">{</span>mr<span class="token punctuation">[</span><span class="token string">&#39;web_url&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token punctuation">{</span>emoji<span class="token punctuation">}</span></span><span class="token string">\\n&quot;</span></span><span class="token punctuation">)</span>
    sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>

  <span class="token comment"># check dir</span>
  sh_get_project_name <span class="token operator">=</span> <span class="token string">&quot;git remote -v | head -n 1 | awk -F/ &#39;{print $(NF)}&#39; | cut -d . -f 1&quot;</span>
  project_name <span class="token operator">=</span> subprocess<span class="token punctuation">.</span>check_output<span class="token punctuation">(</span>sh_get_project_name<span class="token punctuation">,</span> shell<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token keyword">not</span> project_name<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>with_red_color<span class="token punctuation">(</span><span class="token string">&#39;It is not in a gitlab project directory&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Current project_name: {}\\n&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>project_name<span class="token punctuation">)</span><span class="token punctuation">)</span>

  sh_get_current_branch <span class="token operator">=</span> <span class="token string">&quot;git branch | grep \\* | cut -d &#39; &#39; -f 2&quot;</span>
  current_branch <span class="token operator">=</span> subprocess<span class="token punctuation">.</span>check_output<span class="token punctuation">(</span>sh_get_current_branch<span class="token punctuation">,</span> shell<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token comment"># command: merge</span>
  <span class="token keyword">if</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;merge&#39;</span><span class="token punctuation">:</span>
    <span class="token comment"># with web_url</span>
    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">2</span><span class="token punctuation">:</span>
      merge_gitlab_mr<span class="token punctuation">(</span>api_prefix<span class="token punctuation">,</span> headers<span class="token punctuation">,</span> params<span class="token punctuation">,</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
      sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>

    <span class="token keyword">if</span> is_conflict_branch<span class="token punctuation">(</span>current_branch<span class="token punctuation">)</span><span class="token punctuation">:</span>
      <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Conflict resolving branch detected.\\nMerge request will be created and merged automatically\\n&#39;</span><span class="token punctuation">)</span>
      <span class="token comment">#TODO if it&#39;s already created,  [&#39;Another open merge request already exists for this source branch: !17&#39;]</span>
      web_url <span class="token operator">=</span> create_merge_request_from_conflict_branch<span class="token punctuation">(</span>current_branch<span class="token punctuation">,</span> api_prefix<span class="token punctuation">,</span> headers<span class="token punctuation">,</span> params<span class="token punctuation">,</span> project_name<span class="token punctuation">)</span>
      merge_gitlab_mr<span class="token punctuation">(</span>api_prefix<span class="token punctuation">,</span> headers<span class="token punctuation">,</span> params<span class="token punctuation">,</span> web_url<span class="token punctuation">)</span>
      confirm_yes_or_exit<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;Do you want to remove local branch: </span><span class="token interpolation"><span class="token punctuation">{</span>current_branch<span class="token punctuation">}</span></span><span class="token string">? (Y/N)\\n&#39;</span></span><span class="token punctuation">)</span>
      subprocess<span class="token punctuation">.</span>check_output<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;git checkout </span><span class="token interpolation"><span class="token punctuation">{</span>get_source_branch_from_conflict_branch<span class="token punctuation">(</span>current_branch<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>
      subprocess<span class="token punctuation">.</span>check_output<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;git branch -D </span><span class="token interpolation"><span class="token punctuation">{</span>current_branch<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>
      sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>

  <span class="token comment"># command: create</span>
  <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">1</span> <span class="token keyword">and</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;create&#39;</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> is_conflict_branch<span class="token punctuation">(</span>current_branch<span class="token punctuation">)</span><span class="token punctuation">:</span>
      <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Conflict resolving branch detected.\\nMerge request will be created automatically\\n&#39;</span><span class="token punctuation">)</span>
      create_merge_request_from_conflict_branch<span class="token punctuation">(</span>current_branch<span class="token punctuation">,</span> api_prefix<span class="token punctuation">,</span> headers<span class="token punctuation">,</span> params<span class="token punctuation">,</span> project_name<span class="token punctuation">)</span>
      sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>

    source_branch <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Input source branch name, type \`Enter\` to use current branch &#39;</span><span class="token interpolation"><span class="token punctuation">{</span>current_branch<span class="token punctuation">}</span></span><span class="token string">&#39;:\\n&quot;</span></span><span class="token punctuation">)</span>
    need_push_before_create_mr <span class="token operator">=</span> <span class="token boolean">False</span>
    <span class="token keyword">if</span> source_branch<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">:</span>
      source_branch <span class="token operator">=</span> current_branch
      need_push_before_create_mr <span class="token operator">=</span> <span class="token boolean">True</span>

    codebases <span class="token operator">=</span> config<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;codebases&#39;</span><span class="token punctuation">)</span>
    questions <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
      <span class="token string">&#39;type&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;list&#39;</span><span class="token punctuation">,</span>
      <span class="token string">&#39;message&#39;</span><span class="token punctuation">:</span> <span class="token string-interpolation"><span class="token string">f&quot;Choose codebase that you want to merge into&quot;</span></span><span class="token punctuation">,</span>
      <span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;codebase&#39;</span><span class="token punctuation">,</span>
      <span class="token string">&#39;choices&#39;</span><span class="token punctuation">:</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> x<span class="token punctuation">}</span><span class="token punctuation">,</span> codebases<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">]</span>
    answers <span class="token operator">=</span> prompt<span class="token punctuation">(</span>questions<span class="token punctuation">)</span>
    codebase <span class="token operator">=</span> answers<span class="token punctuation">[</span><span class="token string">&#39;codebase&#39;</span><span class="token punctuation">]</span>

    questions <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
      <span class="token string">&#39;type&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;checkbox&#39;</span><span class="token punctuation">,</span>
      <span class="token string">&#39;message&#39;</span><span class="token punctuation">:</span> <span class="token string-interpolation"><span class="token string">f&quot;Choose target branch&quot;</span></span><span class="token punctuation">,</span>
      <span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;target_branch&#39;</span><span class="token punctuation">,</span>
      <span class="token string">&#39;choices&#39;</span><span class="token punctuation">:</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> x<span class="token punctuation">,</span> <span class="token string">&#39;checked&#39;</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">}</span><span class="token punctuation">,</span> codebases<span class="token punctuation">[</span>codebase<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">]</span>
    answers <span class="token operator">=</span> prompt<span class="token punctuation">(</span>questions<span class="token punctuation">)</span>
    <span class="token keyword">while</span> <span class="token builtin">len</span><span class="token punctuation">(</span>answers<span class="token punctuation">[</span><span class="token string">&#39;target_branch&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
      answers <span class="token operator">=</span> prompt<span class="token punctuation">(</span>questions<span class="token punctuation">)</span>

    project_id <span class="token operator">=</span> get_project_id_by_name<span class="token punctuation">(</span>api_prefix<span class="token punctuation">,</span> headers<span class="token punctuation">,</span> params<span class="token punctuation">,</span> project_name<span class="token punctuation">)</span>
    <span class="token keyword">if</span> need_push_before_create_mr<span class="token punctuation">:</span>
      <span class="token comment"># in case user forget to push commits</span>
      subprocess<span class="token punctuation">.</span>check_output<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;git push origin </span><span class="token interpolation"><span class="token punctuation">{</span>current_branch<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">,</span> shell<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Creating merge requests...\\n&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> target_branch <span class="token keyword">in</span> answers<span class="token punctuation">[</span><span class="token string">&#39;target_branch&#39;</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
      create_merge_request<span class="token punctuation">(</span>source_branch<span class="token punctuation">,</span> target_branch<span class="token punctuation">,</span> api_prefix<span class="token punctuation">,</span> project_id<span class="token punctuation">,</span> headers<span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="测试文件-test-test-mr-py" tabindex="-1"><a class="header-anchor" href="#测试文件-test-test-mr-py" aria-hidden="true">#</a> 测试文件：test/test_mr.py</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> pytest

<span class="token keyword">from</span> mr <span class="token keyword">import</span> check_config<span class="token punctuation">,</span> with_red_color<span class="token punctuation">,</span> with_green_color<span class="token punctuation">,</span> is_conflict_branch<span class="token punctuation">,</span> get_target_branch<span class="token punctuation">,</span> get_source_branch_from_conflict_branch

<span class="token keyword">def</span> <span class="token function">test_is_conflict_branch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">assert</span> is_conflict_branch<span class="token punctuation">(</span><span class="token string">&quot;conflict/feature1(to)feature2&quot;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token boolean">True</span>
  <span class="token keyword">assert</span> is_conflict_branch<span class="token punctuation">(</span><span class="token string">&quot;conflict/hotfix(to)release&quot;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token boolean">True</span>
  <span class="token keyword">assert</span> is_conflict_branch<span class="token punctuation">(</span><span class="token string">&quot;conflict/bugfix&quot;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token boolean">False</span>
  <span class="token keyword">assert</span> is_conflict_branch<span class="token punctuation">(</span><span class="token string">&quot;feature1(to)feature2&quot;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token boolean">False</span>
  <span class="token keyword">assert</span> is_conflict_branch<span class="token punctuation">(</span><span class="token string">&quot;conflict/feature1(to)&quot;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token boolean">False</span>
  <span class="token keyword">assert</span> is_conflict_branch<span class="token punctuation">(</span><span class="token string">&quot;conflict/feature1tofeature2&quot;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token boolean">False</span>

<span class="token keyword">def</span> <span class="token function">test_get_source_branch_from_conflict_branch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">assert</span> get_source_branch_from_conflict_branch<span class="token punctuation">(</span><span class="token string">&quot;conflict/feature1(to)feature2&quot;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&quot;feature1&quot;</span>
  <span class="token keyword">with</span> pytest<span class="token punctuation">.</span>raises<span class="token punctuation">(</span>ValueError<span class="token punctuation">)</span><span class="token punctuation">:</span>
    get_source_branch_from_conflict_branch<span class="token punctuation">(</span><span class="token string">&quot;no-match&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">test_get_target_branch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">assert</span> get_target_branch<span class="token punctuation">(</span><span class="token string">&quot;conflict/feature1(to)feature2&quot;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&quot;feature2&quot;</span>
  <span class="token keyword">assert</span> get_target_branch<span class="token punctuation">(</span><span class="token string">&quot;conflict/hotfix(to)release&quot;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&quot;release&quot;</span>
  <span class="token keyword">assert</span> get_target_branch<span class="token punctuation">(</span><span class="token string">&quot;conflict/bugfix(to)bugfix2&quot;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&quot;bugfix2&quot;</span>
  <span class="token keyword">assert</span> get_target_branch<span class="token punctuation">(</span><span class="token string">&quot;conflict/feature1(to)feature2 &quot;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&quot;feature2&quot;</span>
  <span class="token keyword">assert</span> get_target_branch<span class="token punctuation">(</span><span class="token string">&quot;conflict/feature1(to)  feature2&quot;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&quot;feature2&quot;</span>
  <span class="token keyword">assert</span> get_target_branch<span class="token punctuation">(</span><span class="token string">&quot;conflict/feature1 (to) feature2&quot;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&quot;feature2&quot;</span>
  <span class="token keyword">assert</span> get_target_branch<span class="token punctuation">(</span><span class="token string">&quot;conflict/feature1(to)(to)feature2&quot;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&quot;feature2&quot;</span>

<span class="token keyword">def</span> <span class="token function">test_print_color</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span>with_red_color<span class="token punctuation">(</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span>with_green_color<span class="token punctuation">(</span><span class="token string">&quot;ok&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">test_check_config</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">assert</span> check_config<span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span>
  <span class="token keyword">assert</span> check_config<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span>
  <span class="token keyword">assert</span> check_config<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;gitlab_url&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span>
  <span class="token keyword">assert</span> check_config<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;gitlab_token&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span>

  no_token <span class="token operator">=</span> check_config<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;gitlab_url&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;url&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;gitlab_token&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span>no_token<span class="token punctuation">)</span>
  <span class="token keyword">assert</span> no_token <span class="token operator">!=</span> <span class="token number">0</span>
  <span class="token keyword">assert</span> check_config<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;gitlab_url&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;url&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;gitlab_token&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;token&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span>

  config <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;gitlab_url&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;url&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;gitlab_token&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;token&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;gitlab_group&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;group&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;codebases&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
      <span class="token string">&#39;default&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&#39;dev&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;master&#39;</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">assert</span> check_config<span class="token punctuation">(</span>config<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span>

  <span class="token comment">#del config[&#39;gitlab_group&#39;]</span>
  <span class="token comment">#assert check_config(config) != 0</span>

  <span class="token keyword">del</span> config<span class="token punctuation">[</span><span class="token string">&#39;codebases&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;default&#39;</span><span class="token punctuation">]</span>
  <span class="token keyword">assert</span> check_config<span class="token punctuation">(</span>config<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function h(y,w){const t=p("ExternalLinkIcon"),e=p("RouterLink");return c(),i("div",null,[n("h1",d,[v,s(),n("a",m,[s("mr.py"),a(t)])]),n("p",null,[a(e,{to:"/git/use-command-line-tool-to-manage-gitlab-merge-request.html"},{default:l(()=>[s("操作 Gitlab MR 的命令行工具")]),_:1}),s("的源码与测试代码。")]),u(" more "),n("h2",b,[g,s(" 源文件："),n("a",_,[s("main.py"),a(t)])]),f])}const j=o(k,[["render",h],["__file","mr.py.html.vue"]]);export{j as default};
