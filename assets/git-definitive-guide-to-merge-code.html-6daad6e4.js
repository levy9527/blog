const e=JSON.parse('{"key":"v-48e494ef","path":"/git/git-definitive-guide-to-merge-code.html","title":"Git代码合并指南","lang":"zh-CN","frontmatter":{"date":"2022-04-28T00:00:00.000Z","tag":["Git"],"description":"Git代码合并指南 前言 合并时代码常见问题是冲突、提交错代码以及合并错分支，本文将说明这些问题的解决方案，为代码合并打下坚实的基础，以应对未来可能出现的分支模型多样化、协作流程复杂化的场景。 在说明问题前，先定义一些概念： feat：指代功能分支 dev 与 test：指代两条不同的长驻分支，它们具有以下特点： 受保护，不能直接推送 不会被删除 二者之间不直接合并，也即合并方式一般是 feat -&gt; dev，feat -&gt; test MR：merge request。代码合并请求","head":[["meta",{"property":"og:url","content":"https://levy.vip/git/git-definitive-guide-to-merge-code.html"}],["meta",{"property":"og:site_name","content":"levy"}],["meta",{"property":"og:title","content":"Git代码合并指南"}],["meta",{"property":"og:description","content":"Git代码合并指南 前言 合并时代码常见问题是冲突、提交错代码以及合并错分支，本文将说明这些问题的解决方案，为代码合并打下坚实的基础，以应对未来可能出现的分支模型多样化、协作流程复杂化的场景。 在说明问题前，先定义一些概念： feat：指代功能分支 dev 与 test：指代两条不同的长驻分支，它们具有以下特点： 受保护，不能直接推送 不会被删除 二者之间不直接合并，也即合并方式一般是 feat -&gt; dev，feat -&gt; test MR：merge request。代码合并请求"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-16T19:55:23.000Z"}],["meta",{"property":"article:author","content":"levy"}],["meta",{"property":"article:tag","content":"Git"}],["meta",{"property":"article:published_time","content":"2022-04-28T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-16T19:55:23.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Git代码合并指南\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-04-28T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-16T19:55:23.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"levy\\"}]}"]]},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"功能分支合并长驻分支冲突","slug":"功能分支合并长驻分支冲突","link":"#功能分支合并长驻分支冲突","children":[{"level":3,"title":"解决思路","slug":"解决思路","link":"#解决思路","children":[]},{"level":3,"title":"操作步骤","slug":"操作步骤","link":"#操作步骤","children":[]}]},{"level":2,"title":"功能分支被污染","slug":"功能分支被污染","link":"#功能分支被污染","children":[{"level":3,"title":"解决思路","slug":"解决思路-1","link":"#解决思路-1","children":[]},{"level":3,"title":"操作步骤","slug":"操作步骤-1","link":"#操作步骤-1","children":[]}]},{"level":2,"title":"挑选别的分支部分代码合并","slug":"挑选别的分支部分代码合并","link":"#挑选别的分支部分代码合并","children":[{"level":3,"title":"解决思路","slug":"解决思路-2","link":"#解决思路-2","children":[]},{"level":3,"title":"操作步骤","slug":"操作步骤-2","link":"#操作步骤-2","children":[]}]}],"git":{"createdTime":1702756523000,"updatedTime":1702756523000,"contributors":[{"name":"levy","email":"897895407@qq.com","commits":1}]},"readingTime":{"minutes":3.45,"words":1035},"filePathRelative":"git/git-definitive-guide-to-merge-code.md","localizedDate":"2022年4月28日","excerpt":"<h1> Git代码合并指南</h1>\\n<h2> 前言</h2>\\n<p>合并时代码常见问题是冲突、提交错代码以及合并错分支，本文将说明这些问题的解决方案，为代码合并打下坚实的基础，以应对未来可能出现的分支模型多样化、协作流程复杂化的场景。<br>\\n在说明问题前，先定义一些概念：</p>\\n<ul>\\n<li>feat：指代功能分支</li>\\n<li>dev 与 test：指代两条不同的长驻分支，它们具有以下特点：\\n<ul>\\n<li>受保护，不能直接推送</li>\\n<li>不会被删除</li>\\n<li>二者之间不直接合并，也即合并方式一般是 feat -&gt; dev，feat -&gt; test</li>\\n</ul>\\n</li>\\n<li>MR：merge request。代码合并请求</li>\\n</ul>","autoDesc":true}');export{e as data};
