const t=JSON.parse('{"key":"v-3f1072fa","path":"/daily/mysql-data-migration-case-study-add-auto-increment.html","title":"数据迁移案例：表AUTO_INCREMENT加10w","lang":"zh-CN","frontmatter":{"date":"2023-08-16T00:00:00.000Z","tag":["Daily","MySQL"],"description":"数据迁移案例：表AUTO_INCREMENT加10w 背景 项目要做数据迁移，要把 mysql-a 的数据，迁移至 mysql-b，同时 mysql-b 的数据不能丢失。 问题分析： 两个 mysql 实例的表的主键都是自动，若直接合并，必然造成主键冲突。 可以修改某一方的主键后再迁移，但要注意后续不会因主键增长而发生冲突。 迁移思路: 由于 mysql-b 的数据更重要，故决定修改 mysql-a 的数据的主键，方案是增加 10w（mysql-b 的单表数据不超过 10w条） mysql-b 的相应的表 AUTO_INCREMENT 加 10w","head":[["meta",{"property":"og:url","content":"https://levy.vip/daily/mysql-data-migration-case-study-add-auto-increment.html"}],["meta",{"property":"og:site_name","content":"levy"}],["meta",{"property":"og:title","content":"数据迁移案例：表AUTO_INCREMENT加10w"}],["meta",{"property":"og:description","content":"数据迁移案例：表AUTO_INCREMENT加10w 背景 项目要做数据迁移，要把 mysql-a 的数据，迁移至 mysql-b，同时 mysql-b 的数据不能丢失。 问题分析： 两个 mysql 实例的表的主键都是自动，若直接合并，必然造成主键冲突。 可以修改某一方的主键后再迁移，但要注意后续不会因主键增长而发生冲突。 迁移思路: 由于 mysql-b 的数据更重要，故决定修改 mysql-a 的数据的主键，方案是增加 10w（mysql-b 的单表数据不超过 10w条） mysql-b 的相应的表 AUTO_INCREMENT 加 10w"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-16T13:26:58.000Z"}],["meta",{"property":"article:author","content":"levy"}],["meta",{"property":"article:tag","content":"Daily"}],["meta",{"property":"article:tag","content":"MySQL"}],["meta",{"property":"article:published_time","content":"2023-08-16T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-16T13:26:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"数据迁移案例：表AUTO_INCREMENT加10w\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-08-16T00:00:00.000Z\\",\\"dateModified\\":\\"2023-08-16T13:26:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"levy\\"}]}"]]},"headers":[{"level":2,"title":"背景","slug":"背景","link":"#背景","children":[]},{"level":2,"title":"SQL编写","slug":"sql编写","link":"#sql编写","children":[]},{"level":2,"title":"存储过程（可复用","slug":"存储过程-可复用","link":"#存储过程-可复用","children":[]}],"git":{"createdTime":1692192418000,"updatedTime":1692192418000,"contributors":[{"name":"levy","email":"897895407@qq.com","commits":1}]},"readingTime":{"minutes":1.57,"words":472},"filePathRelative":"daily/mysql-data-migration-case-study-add-auto-increment.md","localizedDate":"2023年8月16日","excerpt":"<h1> 数据迁移案例：表AUTO_INCREMENT加10w</h1>\\n<h2> 背景</h2>\\n<p>项目要做数据迁移，要把 mysql-a 的数据，迁移至 mysql-b，同时 mysql-b 的数据不能丢失。</p>\\n<p>问题分析：</p>\\n<ol>\\n<li>两个 mysql 实例的表的主键都是自动，若直接合并，必然造成主键冲突。</li>\\n<li>可以修改某一方的主键后再迁移，但要注意后续不会因主键增长而发生冲突。</li>\\n</ol>\\n<p>迁移思路:</p>\\n<ol>\\n<li>由于 mysql-b 的数据更重要，故决定修改 mysql-a 的数据的主键，方案是增加 10w（mysql-b 的单表数据不超过 10w条）</li>\\n<li>mysql-b 的相应的表 AUTO_INCREMENT 加 10w</li>\\n</ol>\\n","autoDesc":true}');export{t as data};
