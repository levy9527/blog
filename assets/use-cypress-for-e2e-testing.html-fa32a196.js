const e=JSON.parse('{"key":"v-c488ac58","path":"/software-testing/use-cypress-for-e2e-testing.html","title":"使用 Cypress 进行端对端测试","lang":"zh-CN","frontmatter":{"date":"2020-12-08T00:00:00.000Z","tag":["Node.js","Testing"],"description":"使用 Cypress 进行端对端测试 为什么写端对端测试 写端对端测试代码的最大好处就是，把相关的用例变成可执行的代码，成为项目的资产；结合CI系统，可在后续研发维护过程中，将一部分测试过程自动化，减少重复的手工劳动，既保障质量，又提高效率。 谁来写呢？本文的目标读者是前端研发人员，因而相关测试代码是由前端同学去编写的。 为什么用 Cypress 文档齐全，生态好，对 JavaScript 友好，可简单上手。更多详见：why-cypress","head":[["meta",{"property":"og:url","content":"https://levy.vip/software-testing/use-cypress-for-e2e-testing.html"}],["meta",{"property":"og:site_name","content":"levy"}],["meta",{"property":"og:title","content":"使用 Cypress 进行端对端测试"}],["meta",{"property":"og:description","content":"使用 Cypress 进行端对端测试 为什么写端对端测试 写端对端测试代码的最大好处就是，把相关的用例变成可执行的代码，成为项目的资产；结合CI系统，可在后续研发维护过程中，将一部分测试过程自动化，减少重复的手工劳动，既保障质量，又提高效率。 谁来写呢？本文的目标读者是前端研发人员，因而相关测试代码是由前端同学去编写的。 为什么用 Cypress 文档齐全，生态好，对 JavaScript 友好，可简单上手。更多详见：why-cypress"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-30T11:09:30.000Z"}],["meta",{"property":"article:author","content":"levy"}],["meta",{"property":"article:tag","content":"Node.js"}],["meta",{"property":"article:tag","content":"Testing"}],["meta",{"property":"article:published_time","content":"2020-12-08T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-30T11:09:30.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"使用 Cypress 进行端对端测试\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-12-08T00:00:00.000Z\\",\\"dateModified\\":\\"2023-07-30T11:09:30.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"levy\\"}]}"]]},"headers":[{"level":2,"title":"为什么写端对端测试","slug":"为什么写端对端测试","link":"#为什么写端对端测试","children":[]},{"level":2,"title":"为什么用 Cypress","slug":"为什么用-cypress","link":"#为什么用-cypress","children":[]},{"level":2,"title":"快速开始","slug":"快速开始","link":"#快速开始","children":[{"level":3,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":3,"title":"加速下载","slug":"加速下载","link":"#加速下载","children":[]},{"level":3,"title":"目录结构","slug":"目录结构","link":"#目录结构","children":[]},{"level":3,"title":"与 Jest 协同工作","slug":"与-jest-协同工作","link":"#与-jest-协同工作","children":[]},{"level":3,"title":"检查依赖及生产安装依赖命令","slug":"检查依赖及生产安装依赖命令","link":"#检查依赖及生产安装依赖命令","children":[]},{"level":3,"title":"第一个用例","slug":"第一个用例","link":"#第一个用例","children":[]},{"level":3,"title":"更复杂的示例","slug":"更复杂的示例","link":"#更复杂的示例","children":[]}]},{"level":2,"title":"结合TypeScript","slug":"结合typescript","link":"#结合typescript","children":[]},{"level":2,"title":"持续集成","slug":"持续集成","link":"#持续集成","children":[{"level":3,"title":"直接运行 Cypress","slug":"直接运行-cypress","link":"#直接运行-cypress","children":[]},{"level":3,"title":"使用 start-server-and-test","slug":"使用-start-server-and-test","link":"#使用-start-server-and-test","children":[]},{"level":3,"title":"This job is stuck","slug":"this-job-is-stuck","link":"#this-job-is-stuck","children":[]},{"level":3,"title":"Cypress Dashbord","slug":"cypress-dashbord","link":"#cypress-dashbord","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]},{"level":2,"title":"拓展阅读","slug":"拓展阅读","link":"#拓展阅读","children":[]}],"git":{"createdTime":1690715370000,"updatedTime":1690715370000,"contributors":[{"name":"levy","email":"897895407@qq.com","commits":1}]},"readingTime":{"minutes":8.05,"words":2414},"filePathRelative":"software-testing/use-cypress-for-e2e-testing.md","localizedDate":"2020年12月8日","excerpt":"<h1> 使用 Cypress 进行端对端测试</h1>\\n<h2> 为什么写端对端测试</h2>\\n<p>写端对端测试代码的最大好处就是，把相关的用例变成可执行的代码，成为项目的资产；结合CI系统，可在后续研发维护过程中，将一部分测试过程自动化，减少重复的手工劳动，既保障质量，又提高效率。</p>\\n<p>谁来写呢？本文的目标读者是前端研发人员，因而相关测试代码是由前端同学去编写的。</p>\\n<h2> 为什么用 Cypress</h2>\\n<p>文档齐全，生态好，对 JavaScript 友好，可简单上手。更多详见：<a href=\\"https://docs.cypress.io/guides/overview/why-cypress.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">why-cypress</a></p>","autoDesc":true}');export{e as data};
