const e=JSON.parse('{"key":"v-2ba0b01e","path":"/java/using-enum-in-java.html","title":"枚举的推荐实践","lang":"zh-CN","frontmatter":{"date":"2022-10-14T00:00:00.000Z","tag":["Java","Daily"],"description":"枚举的推荐实践 背景 定义枚举的动机在于，可以作为常量，避免魔法值的出现。并且具有相应的类型，方便检索、与代码提示。 而在使用过程中，一种符合直觉的想法是，期望枚举在具备基本的 key-value 的功能外，还能够承载更多的信息。 本文推荐，不要在枚举中定义数字，直接使用枚举名即可！ Java 极简实现 理想状态下，枚举就应该这样简单！ public enum SEX { MALE, FEMALE; }","head":[["meta",{"property":"og:url","content":"https://levy.vip/java/using-enum-in-java.html"}],["meta",{"property":"og:site_name","content":"levy"}],["meta",{"property":"og:title","content":"枚举的推荐实践"}],["meta",{"property":"og:description","content":"枚举的推荐实践 背景 定义枚举的动机在于，可以作为常量，避免魔法值的出现。并且具有相应的类型，方便检索、与代码提示。 而在使用过程中，一种符合直觉的想法是，期望枚举在具备基本的 key-value 的功能外，还能够承载更多的信息。 本文推荐，不要在枚举中定义数字，直接使用枚举名即可！ Java 极简实现 理想状态下，枚举就应该这样简单！ public enum SEX { MALE, FEMALE; }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-02T07:15:35.000Z"}],["meta",{"property":"article:author","content":"levy"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"Daily"}],["meta",{"property":"article:published_time","content":"2022-10-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-02T07:15:35.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"枚举的推荐实践\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-10-14T00:00:00.000Z\\",\\"dateModified\\":\\"2024-01-02T07:15:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"levy\\"}]}"]]},"headers":[{"level":2,"title":"背景","slug":"背景","link":"#背景","children":[]},{"level":2,"title":"Java","slug":"java","link":"#java","children":[{"level":3,"title":"极简实现","slug":"极简实现","link":"#极简实现","children":[]},{"level":3,"title":"常见实现","slug":"常见实现","link":"#常见实现","children":[]},{"level":3,"title":"更好的方式","slug":"更好的方式","link":"#更好的方式","children":[]},{"level":3,"title":"为什么还要定义数字？","slug":"为什么还要定义数字","link":"#为什么还要定义数字","children":[]}]},{"level":2,"title":"数据库","slug":"数据库","link":"#数据库","children":[{"level":3,"title":"排序特点","slug":"排序特点","link":"#排序特点","children":[]},{"level":3,"title":"添加新值","slug":"添加新值","link":"#添加新值","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1704179735000,"updatedTime":1704179735000,"contributors":[{"name":"levy","email":"chenriwei@deepexi.com","commits":1}]},"readingTime":{"minutes":5.59,"words":1676},"filePathRelative":"java/using-enum-in-java.md","localizedDate":"2022年10月14日","excerpt":"<h1> 枚举的推荐实践</h1>\\n<h2> 背景</h2>\\n<p>定义枚举的动机在于，可以作为常量，避免魔法值的出现。并且具有相应的类型，方便检索、与代码提示。</p>\\n<p>而在使用过程中，一种符合直觉的想法是，期望枚举在具备基本的 key-value 的功能外，还能够承载更多的信息。</p>\\n<p>本文推荐，不要在枚举中定义数字，直接使用枚举名即可！</p>\\n<h2> Java</h2>\\n<h3> 极简实现</h3>\\n<p>理想状态下，枚举就应该这样简单！</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">enum</span> <span class=\\"token class-name\\">SEX</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token constant\\">MALE</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token constant\\">FEMALE</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
